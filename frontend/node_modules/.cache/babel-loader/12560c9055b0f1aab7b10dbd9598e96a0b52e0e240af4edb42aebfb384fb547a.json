{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nancy\\\\Desktop\\\\Development\\\\adv-starting-project\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\NewEventPage.js\";\nimport { json } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n_c = NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = request.formData();\n  const enteredValue = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(enteredValue)\n  });\n  if (response.ok) {\n    return json({\n      message: 'Could not save event'\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","enteredValue","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["C:/Users/Nancy/Desktop/Development/adv-starting-project/12-adv-starting-project/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import { json } from \"react-router-dom\";\r\nimport EventForm from \"../components/EventForm\";\r\n\r\nexport default function NewEventPage() {\r\n    return <EventForm />\r\n}\r\n\r\nexport async function action ({request, params}) {\r\n    const data = request.formData();\r\n    const enteredValue = {\r\n        title: data.get('title'),\r\n        image: data.get('image'),\r\n        date: data.get('date'),\r\n        description: data.get('description')\r\n    } \r\n    \r\n    const response = await fetch('http://localhost:8080/events', {\r\n        method: 'POST',\r\n        headers: {'Content-type': 'application/json'},\r\n        body: JSON.stringify(enteredValue)\r\n    });\r\n\r\nif(response.ok) {\r\n    return json({message: 'Could not save event'}, {status: 500})\r\n}\r\n}"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,YAAYA,CAAA,EAAG;EACnC,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxB;AAACC,EAAA,GAFuBL,YAAY;AAIpC,OAAO,eAAeM,MAAMA,CAAE;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC7C,MAAMC,IAAI,GAAGF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAC/B,MAAMC,YAAY,GAAG;IACjBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,YAAY;EACrC,CAAC,CAAC;EAEN,IAAGM,QAAQ,CAACO,EAAE,EAAE;IACZ,OAAO5B,IAAI,CAAC;MAAC6B,OAAO,EAAE;IAAsB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACjE;AACA;AAAC,IAAArB,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}